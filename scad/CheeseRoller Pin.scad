////////////////////////////////////////////////////////////////////////////////
// ### CUSTOMIZABLE VARIABLES
////////////////////////////////////////////////////////////////////////////////
// Width of the spool
SPOOL_WIDTH = 40;
// Print spool width label?
PRINT_LABEL = true;
// Font string for the mm label
LABEL_FONT = "Montserrat Alternates:style=Bold"; // ["Montserrat Alternates:style=Bold", "sans-serif:style=Bold", "monospace:style=Bold"]
// Overrides LABEL_FONT, allows to set a custom font string
LABEL_FONT_CUSTOM = "";

module __Customizer_Limit__() {}


////////////////////////////////////////////////////////////////////////////////
// ### OPENSCAD SPECIAL VARIABLES
////////////////////////////////////////////////////////////////////////////////
$fn = 50;


////////////////////////////////////////////////////////////////////////////////
// ### GLOBAL VARIABLES
////////////////////////////////////////////////////////////////////////////////
include <includes/CheeseRoller Variables.scad>
include <includes/CheeseRoller Variables Width.scad>

PIN_LENGTH = FRAME_INNER_WIDTH + 2 * PIN_FRAME_CUT_LENGTH;
LABEL_SIZE = PIN_DIAMETER * 0.6;


////////////////////////////////////////////////////////////////////////////////
// ### GENERAL UTILITY MODULES
////////////////////////////////////////////////////////////////////////////////
include <includes/CheeseRoller Utilities.scad>


////////////////////////////////////////////////////////////////////////////////
// ### MAIN RENDERING
////////////////////////////////////////////////////////////////////////////////
main();


////////////////////////////////////////////////////////////////////////////////
// ### MODULES
////////////////////////////////////////////////////////////////////////////////
module main() {
    difference() {
        pin_cylinder();
        bottom_cut();
        if (PRINT_LABEL) {
            label();
        }
    }
}


/// ### SIMPLE PARTS
module pin_cylinder() {
    translate([0, PIN_RADIUS, PIN_RADIUS - PIN_CUT_HEIGHT])
        rotate([0, 90, 0])
            cylinder(d = PIN_DIAMETER, h = PIN_LENGTH);
}

module bottom_cut() {
    translate([0, 0, - PIN_CUT_HEIGHT])
        cube([PIN_LENGTH, PIN_DIAMETER, PIN_CUT_HEIGHT]);
}

module label() {
    translate([PIN_LENGTH / 2, PIN_RADIUS, 0])
        mirror([1, 0, 0])
            label_centered();
}
